// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/contracts/auth-social-provider.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/contracts/auth-social-provider.go -destination=test/mocks/auth-social-provider-mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAuthSocialProvider is a mock of AuthSocialProvider interface.
type MockAuthSocialProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAuthSocialProviderMockRecorder
}

// MockAuthSocialProviderMockRecorder is the mock recorder for MockAuthSocialProvider.
type MockAuthSocialProviderMockRecorder struct {
	mock *MockAuthSocialProvider
}

// NewMockAuthSocialProvider creates a new mock instance.
func NewMockAuthSocialProvider(ctrl *gomock.Controller) *MockAuthSocialProvider {
	mock := &MockAuthSocialProvider{ctrl: ctrl}
	mock.recorder = &MockAuthSocialProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthSocialProvider) EXPECT() *MockAuthSocialProviderMockRecorder {
	return m.recorder
}

// GetGoogleAccessToken mocks base method.
func (m *MockAuthSocialProvider) GetGoogleAccessToken(code string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGoogleAccessToken", code)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGoogleAccessToken indicates an expected call of GetGoogleAccessToken.
func (mr *MockAuthSocialProviderMockRecorder) GetGoogleAccessToken(code any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGoogleAccessToken", reflect.TypeOf((*MockAuthSocialProvider)(nil).GetGoogleAccessToken), code)
}
